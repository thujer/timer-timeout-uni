/////////////////////////////////////////////////////////////////////////////
// +---------------------------------------------------------------------+ //
// |                             String utils                            | //
// |                   --------------------------------                  | //
// |                             Version 1.02                            | //
// |                                                                     | //
// |                         Copyright Tomas Hujer                       | //
// |                             (c) 2005-2007                           | //
// |                      thomas.hoodger(at)gmail.com                    | //
// +---------------------------------------------------------------------+ //
//                                                                         //
//  Version history                                                        //
//                                                                         //
//                     ----------------------------------------------      //
//        1.02           Pridana funkce pro porovnani retezcu              //
//                     ----------------------------------------------      //
//                                                                         //
// ----------------------------------------------------------------------- //
/////////////////////////////////////////////////////////////////////////////
#pragma LIST
#pragma PAGELENGTH(30000);
#pragma LINES

#define uchar unsigned char
#define uint  unsigned int
// ---------------------------------------------------------------------------



// +------------------------------------------------------------------------+
// |                       Konverze znaku na velky                          |
// +------------------------------------------------------------------------+
// | Vrati velke pismeno znaku ch                                           |
// +------------------------------------------------------------------------+
uchar str_up_char(uchar ch)
{
    if((ch>='a') &&
     (ch<='z'))
        return(ch & (255-32));
    else
        return(ch);
}


// +------------------------------------------------------------------------+
// |                           Vymazani bufferu                             |
// +------------------------------------------------------------------------+
// | Vynuluje pocet byte Bytes na ukazateli *buf                            |
// +------------------------------------------------------------------------+
void str_reset_buffer(uchar *buf, uint bytes)
{
    uchar i;
    
    for(i=0; i < bytes; i++)
        buf[i]=0;
}


// +------------------------------------------------------------------------+
// |                       Detekce znaku - cislice                          |
// +------------------------------------------------------------------------+
// | Je-li znak cislice vrati 1                                             |
// +------------------------------------------------------------------------+
uchar str_is_num(uchar ch)
{
    if((ch >= '0') &&
       (ch <= '9'))
        return(1);
    else
        return(0);
}


// +------------------------------------------------------------------------+
// |                        Porovnani retezce                               |
// +------------------------------------------------------------------------+
// | Pokud si Bytes znaku v retezcich Ptr1 a Ptr2 odpovida vrati 1          |
// +------------------------------------------------------------------------+
bit str_cmp(uchar *ptr1, uchar *ptr2)
{ 
    uchar i=0;
    bit   out=0;

    //while(ptr1[i] && ptr2[i])
    while(ptr2[i])
    {
        out=1;
        if(str_up_char(ptr1[i]) != str_up_char(ptr2[i]))
        {
            out=0;
            break;
        }
        i++;
    }
    return(out);
}



// +------------------------------------------------------------------------+
// |                        Detekce hex cisla                               |
// +------------------------------------------------------------------------+
// | Je-li byte hex cislo, vraci 1                                          |
// +------------------------------------------------------------------------+
/*
bit is_hex(char byte)
{
    if(((up_char(byte) >= 'A') && (up_char(byte) <='F')) || ((byte >= '0') && (byte <= '9')))
        return(1);
    else
        return(0);        
}
*/

